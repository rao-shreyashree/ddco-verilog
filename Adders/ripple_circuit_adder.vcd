$date
	Wed Aug 20 12:42:23 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ripple_circuit_adder_tb $end
$var wire 1 ! cout $end
$var wire 4 " sum [3:0] $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module uut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ( c0 $end
$var wire 1 ) c1 $end
$var wire 1 * c2 $end
$var wire 1 + cin $end
$var wire 1 ! cout $end
$var wire 4 , sum [3:0] $end
$scope module u0 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 + cin $end
$var wire 1 ( cout $end
$var wire 1 / sum $end
$upscope $end
$scope module u1 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 ( cin $end
$var wire 1 ) cout $end
$var wire 1 2 sum $end
$upscope $end
$scope module u2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 ) cin $end
$var wire 1 * cout $end
$var wire 1 5 sum $end
$upscope $end
$scope module u3 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 * cin $end
$var wire 1 ! cout $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
08
07
06
05
04
03
02
01
00
0/
0.
0-
b0 ,
0+
0*
0)
0(
b0 '
b0 &
0%
b0 $
b0 #
b0 "
0!
$end
#10
12
1/
b11 "
b11 ,
11
1-
b10 $
b10 '
b1 #
b1 &
#20
18
1*
1)
02
05
1(
1/
b1001 "
b1001 ,
1.
13
1%
1+
b11 $
b11 '
b101 #
b101 &
#30
1!
08
0/
b0 "
b0 ,
01
10
16
0%
0+
b1 $
b1 '
b1111 #
b1111 &
#40
12
15
18
b1110 "
b1110 ,
11
14
17
b1111 $
b1111 '
#50
